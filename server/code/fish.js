// Generated by CoffeeScript 1.3.3
(function() {

  module.exports = (function() {

    _Class.prototype.allowedcolors = (function() {
      var combinations, i, j, k, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
      combinations = [];
      _ref = ['0', 'f'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        _ref1 = ['0', 'f'];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          j = _ref1[_j];
          _ref2 = ['0', 'f'];
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            k = _ref2[_k];
            combinations.push(i + j + k);
          }
        }
      }
      combinations.shift();
      return combinations;
    })();

    _Class.prototype.randomcolor = function() {
      return this.allowedcolors[Math.floor(Math.random() * this.allowedcolors.length)];
    };

    function _Class(isplayer) {
      this.isplayer = isplayer != null ? isplayer : false;
      this.x = Math.random();
      this.y = Math.random();
      this.r = Math.random() * .07 + .002;
      this.color = this.randomcolor();
      this.maxspeed = .01;
      this.swimpower = Math.random() * .0003;
      this.xa = 0;
      this.ya = 0;
      this.xs = 0;
      this.ys = 0;
      this.isdead = false;
    }

    _Class.prototype.draw = function() {
      c.fillStyle = this.color;
      if (this.isdead) {
        c.fillStyle = 'black';
      }
      return c.fillOval(this.x, this.y, this.r);
    };

    _Class.prototype.move = function() {
      this.limitmovement();
      this.xs += this.xa;
      this.ys += this.ya;
      this.x += this.xs;
      this.y += this.ys;
      this.limitmovement();
      this.applyfriction();
      return this.wrap();
    };

    _Class.prototype.limitmovement = function() {
      if (Math.abs(this.xs) > this.maxspeed) {
        if (this.xs > 0) {
          this.xs = this.maxspeed;
        }
        if (this.xs < 0) {
          this.xs = -this.maxspeed;
        }
      }
      if (Math.abs(this.ys) > this.maxspeed) {
        if (this.ys > 0) {
          this.ys = this.maxspeed;
        }
        if (this.ys < 0) {
          return this.ys = -this.maxspeed;
        }
      }
    };

    _Class.prototype.applyfriction = function() {
      this.xs *= .95;
      this.ys *= .95;
      this.xa *= .75;
      return this.ya *= .75;
    };

    _Class.prototype.wrap = function() {
      var left, right;
      left = -this.r;
      right = 1 + this.r;
      if (this.x > right) {
        this.x = left;
      }
      if (this.y > right) {
        this.y = left;
      }
      if (this.x < left) {
        this.x = right;
      }
      if (this.y < left) {
        return this.y = right;
      }
    };

    _Class.prototype.moverandomly = function() {
      this.xa = [-4, -3, -2, -1, 0, 1, 2, 3, 4][Math.floor(Math.random() * 9)] * this.swimpower;
      return this.ya = [-4, -3, -2, -1, 0, 1, 2, 3, 4][Math.floor(Math.random() * 9)] * this.swimpower;
    };

    _Class.prototype.colides = function(f) {
      var r, x, y;
      x = this.x - f.x;
      y = this.y - f.y;
      r = this.r + f.r;
      return x * x + y * y < r * r;
    };

    _Class.prototype.trumps = function(f) {
      return this.r > f.r;
    };

    _Class.prototype.eats = function(f) {
      f.isdead = true;
      this.r += ((f.r * f.r) / (this.r * this.r)) / 100;
      if (this.r > .2) {
        return this.isdead = true;
      }
    };

    return _Class;

  })();

}).call(this);
